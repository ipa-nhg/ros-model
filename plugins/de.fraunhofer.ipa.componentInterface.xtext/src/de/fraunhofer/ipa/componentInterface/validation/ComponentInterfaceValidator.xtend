/*
 * generated by Xtext 2.13.0
 */
package de.fraunhofer.ipa.componentInterface.validation

import org.eclipse.xtext.validation.Check
import componentInterface.RosParameter


/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ComponentInterfaceValidator extends AbstractComponentInterfaceValidator {
	
//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					ComponentInterfacePackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

  String expected_type = null;
  String value_type = null;
  String TypeError = null;
  public static val INVALID_TYPE = 'invalidType'
  
  @Check
  def void CheckParameterValue (RosParameter rosparam){
  	expected_type = rosparam.parameter.type.eClass.name;
  	value_type = rosparam.value.eClass.name;
  	if(!expected_type.contains(value_type)){
  		TypeError="mismatched input "+value_type+ " expecting "+ expected_type
  		error( TypeError, null, INVALID_TYPE)
  	}
  }
	
}
