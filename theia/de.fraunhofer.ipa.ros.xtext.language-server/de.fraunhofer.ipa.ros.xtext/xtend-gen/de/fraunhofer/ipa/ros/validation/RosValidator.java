/**
 * generated by Xtext 2.12.0
 */
package de.fraunhofer.ipa.ros.validation;

import de.fraunhofer.ipa.ros.validation.AbstractRosValidator;
import org.eclipse.xtext.validation.Check;
import ros.Artifact;
import ros.Node;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class RosValidator extends AbstractRosValidator {
  public final static String INVALID_NAME = "invalidName";
  
  /**
   * CAPITAL LETTERS
   */
  @Check
  public void checkNameConventionsNode(final Node node) {
    char[] _charArray = node.getName().toCharArray();
    for (final char c : _charArray) {
      boolean _isUpperCase = Character.isUpperCase(c);
      if (_isUpperCase) {
        this.warning("The name of a node should follow the ROS naming conventions: Capital letters are not recommended", null, RosValidator.INVALID_NAME);
      }
    }
  }
  
  @Check
  public void checkNameConventionsArtifact(final Artifact artifact) {
    char[] _charArray = artifact.getName().toCharArray();
    for (final char c : _charArray) {
      boolean _isUpperCase = Character.isUpperCase(c);
      if (_isUpperCase) {
        this.warning("The name of a artifact should follow the ROS naming conventions: Capital letters are not recommended", null, RosValidator.INVALID_NAME);
      }
    }
  }
  
  @Check
  public void checkNameConventionsPackage(final ros.Package rospackage) {
    char[] _charArray = rospackage.getName().toCharArray();
    for (final char c : _charArray) {
      boolean _isUpperCase = Character.isUpperCase(c);
      if (_isUpperCase) {
        this.error("The name of a package has to follow the ROS naming conventions: Capital letters are not allowed", null, RosValidator.INVALID_NAME);
      }
    }
  }
}
